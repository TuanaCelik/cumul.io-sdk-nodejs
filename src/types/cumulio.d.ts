/** Declaration file generated by dts-gen */
export = cumulio;

declare namespace cumulio {
  export interface Options {
    api_key: string;
    api_token: string;
    app?: string;
    host?: string;
    port?: string;
  }

  export enum Resource {
    Authorization = "authorization",
    User = "user",
    Group = "group",
    Securable = "securable",
    Column = "column",
    HierarchyLevel = "hierarchylevel",
    Account = "account",
    Plugin = "plugin",
    Locale = "locale",
    Schedule = "schedule",
    Country = "country",
    Share = "share",
    Tag = "tag",
    Theme = "theme",
  }
}

declare class cumulio {
  constructor(options: cumulio.Options);

  associate(
    resource: cumulio.Resource,
    id: any,
    association: any,
    properties: any
  ): any;

  close(): void;

  create(resource: cumulio.Resource, properties: any, associations: any): any;

  delete(resource: cumulio.Resource, id: any, properties: any): any;

  dissociate(resource: cumulio.Resource, id: any, association: any): any;

  get(resource: cumulio.Resource, filter: any): any;

  iframe(dashboardId: cumulio.Resource, authorization: any): any;

  query(filter: any): any;

  update(resource: cumulio.Resource, id: any, properties: any): any;

  validate(resource: cumulio.Resource, properties: any): any;

  static API_VERSION: string;

  static APP: string;

  static HOST: string;

  static HTTP_METHOD: {
    associate: string;
    create: string;
    delete: string;
    dissociate: string;
    get: string;
    update: string;
    validate: string;
  };

  static PORT: string;
}
